(import "utils.kl")
(import "graphics.kl")

(struct device
    (uint8 id)
    (uint8 class)
    (uint8 interrupt-line)
    (uint32 base-address-0)
    (uint32 limit-0)
    (uint32 base-address-1)
    (uint32 limit-1)
)

(fn uint32 device-scan ((uint32 addr) (uint8 id))
    (set-8 0xF0001 id)
    (set-8 0xF0000 0x01)
    (while (== (get-8 0xF0000) 0x02))
    (cond ((== (get-8 0xF0000) 0x01)
        (bcopy 0xF0001 addr (size device))
        (return 0)
    ))
    (return 1)
)

(fn void device-print ((uint32 addr))
    (draw-string (str "ID:             ")) (draw-int (get device.id addr)) (newline)
    (draw-string (str "Class:          ")) (draw-int (get device.class addr)) (newline)
    (draw-string (str "Interrupt line: ")) (draw-int (get device.interrupt-line addr)) (newline)
    (draw-string (str "Base address 0: ")) (draw-int (get device.base-address-0 addr)) (newline)
    (draw-string (str "Limit 0:        ")) (draw-int (get device.limit-0 addr)) (newline)
    (draw-string (str "Base address 1: ")) (draw-int (get device.base-address-1 addr)) (newline)
    (draw-string (str "Limit 1:        ")) (draw-int (get device.limit-1 addr)) (newline)
)